{"version":3,"sources":["components/Hero/Hero.js","components/footer/footer.js","components/About/About.js","components/Contact/Contact.js","components/Projects/ProjectCards.js","components/Projects/Projects.js","components/Home/home.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["Hero","react_default","a","createElement","className","footer","href","target","About","src","alt","Contact","htmlFor","type","name","value","ProjectCards","props","image","title","description","url","Project","project","map","cardsList","Projects_ProjectCards","key","Home","components_Hero_Hero","Projects","projects","components_About_About","components_Contact_Contact","components_footer_footer","Header","window","onscroll","navbar","document","getElementById","sticky","offsetTop","pageYOffset","classList","add","remove","toggleMenu","modal","style","display","id","onClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","fetch","then","response","json","res","setState","console","log","data","components_Header_Header","home","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8c32a16.chunk.js","sourcesContent":["import React from 'react'; \n\n\nconst Hero = () => {\n    return (\n        <div className=\"hero\">\n            <div className=\"hero__content\">\n            <h1>Horacio Hernandez</h1>\n            <p> Software Engineer</p></div>\n        </div>\n    )\n}\n\n\nexport default Hero","import React from 'react';\n\nconst footer = () => {\n    return (\n        <footer>\n            <nav className=\"social-media__nav\">\n                <ul>\n                    <li><a href=\"https://www.facebook.com/horacio.hernandez.5203\" target=\"_blank\"className=\"social-media__nav__facebook-icon\"></a></li>\n                    <li className=\"social-media__nav-link--margin-left \"><a target=\"_blank\"href=\"https://www.linkedin.com/in/horacio-hernandez-39bb3813b/\" className=\"social-media__nav__linkedIn-icon\"></a></li>\n              \n          \n                </ul>\n            </nav>\n        </footer>\n    )\n}\n\nexport default footer","import React from 'react';\n\n\nconst About = () => {\n    return (\n        <div className=\"about-container\">\n            <img src=\"https://i.imgur.com/qMUK2Hm.png\" alt=\"Horacio\"/>\n            <div className=\"about-container__content\">\n                <h2>About me</h2>\n                <p>I was born in Micho√†can, Mexico. I came to the United States at the age of 5. Growing up, I faced a lot of struggles, from learning a whole \n                      new language. I made a lot of mistakes in the past, but it as made me a better person and I have learned from those experiences. I never gave up on achieving my career goals and I \n                     can not wait to see what the future holds for me. </p>\n                    <p> I was apart of the Road to Hire tech program. A non-profit organization that helps young adults achieve their goals regardless of their background.\n                        Throughtout the program, I have not only learned coding languages but, also soft skills. I'm excited to continue learning and my future as a web \n                        developer.\n                    </p>\n                    <a href=\"#\">View Resume</a>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nconst  Contact = () => {\nreturn (\n    <div className=\"contact-container\">\n    \n      \n        <div className=\"contact-container__form\">\n        <h2>Get in Touch with Me</h2>\n        <p>Ask me Anything or leave any comments!</p>\n        <form>\n            <div className=\"form__inputs\">\n                <label htmlFor=\"firstName\">First Name</label>\n                <input type=\"text\" name=\"firstName\" />\n            </div>\n            <div className=\"form__inputs\">\n                <label htmlFor=\"lasttName\">Last Name</label>\n                <input type=\"text\" name=\"lastName\" />\n            </div>\n            <div className=\"form__inputs\">\n                <label htmlFor=\"firstName\">email</label>\n                <input type=\"email\" name=\"email\" />\n            </div>\n            \n            <div className=\"form__inputs\">\n                <label htmlFor=\"message\">Message</label>\n                <textarea type=\"text\" name=\"message\" />\n            </div>\n            <input className=\"submitBtn\" type=\"submit\" value=\"send\" />\n        </form>\n        </div>\n        <div className=\"contact-container__side\">\n       \n        <p> <span className=\"contact-container__email-icon\"></span>horacio.hhh1@gmail.com</p>\n       \n       <p><span className=\"contact-container__phone-icon\"></span>704-309-4517</p>\n        </div>\n     \n</div>\n)\n}\n\nexport default Contact"," import React from 'react';\n\n const ProjectCards = (props) => {\n    return (\n        <div className=\"row__card\">\n        \n            <img src= {props.image} />\n            <div className=\"row__card__content\">\n                <h2>{props.title}</h2>\n                <p>{props.description}</p>\n                <a href={props.url}>View Website</a>\n            </div>\n        </div>\n    )\n }\n\n\n export default ProjectCards ","import React from \"react\";\nimport ProjectCards from \"./ProjectCards\";\nconst Project = props => {\n  return (\n    <div className=\"row\">\n      {props.project.map(cardsList => {\n        return (\n          <ProjectCards\n          key={cardsList.title}\n            title={cardsList.title}\n            image={cardsList.image}\n            description={cardsList.description}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport Hero from \"../Hero/Hero\";\nimport Footer from \"../footer/footer\";\nimport About from \"../About/About\";\nimport Contact from \"../Contact/Contact\";\nimport Project from \"../Projects/Projects\";\n\nconst Home = (props) => {\n  return (\n    <div>\n      <main>\n        <Hero />\n        <Project project={props.projects}/>\n        <About />\n        <Contact />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Header = () => {\n  // Get the navbar\n\n  // Get the offset position of the navbar\n\n  // Add the sticky class to the navbar when you reach its scroll position. Remove \"sticky\" when you leave the scroll position\n  const stickyNavBar = () => {\n    const navbar = document.getElementById(\"main-nav\");\n    const sticky = navbar.offsetTop;\n    if (window.pageYOffset > sticky) {\n      navbar.classList.add(\"sticky\");\n    } else {\n      navbar.classList.remove(\"sticky\");\n    }\n  };\n  window.onscroll = () => stickyNavBar();\n  const toggleMenu = () => {\n    const modal = document.getElementById('mobile-nav');\n\n    if (modal.style.display === 'block')\n      modal.style.display = 'none'\n      else {\n        modal.style.display = 'block'\n      }\n  };\n  return (\n    <header>\n\n      <nav className=\"mobile-nav\" id=\"mobile-nav\">\n      <div\n          className=\" mobile-nav__menu-icon--mobile\"\n          id=\"menu-icon\"\n          onClick={toggleMenu}\n        />\n        <ul>\n          <li className=\"main-nav__listItem \">\n            <a href=\"#\">About</a>\n          </li>\n          <li className=\"main-nav__listItem main-nav__listItem--margin-top\">\n            <a href=\"#\"> Contact</a>\n          </li>\n          <li className=\"main-nav__listItem main-nav__listItem--margin-top\">\n            <a href=\"#\">Portfolio</a>\n          </li>\n\n        </ul>\n     \n      </nav>\n      <nav className=\"main-nav\" id=\"main-nav\">\n        <ul className=\"main-nav__links\">\n          <li className=\"main-nav__listItem--logo\">\n            <a href=\"#\">HHH</a>\n          </li>\n          <li className=\"main-nav__listItem\">\n            <a href=\"#\">About</a>\n          </li>\n          <li className=\"main-nav__listItem\">\n            <a href=\"#\"> Contact</a>\n          </li>\n          <li className=\"main-nav__listItem\">\n            <a href=\"#\">Portfolio</a>\n          </li>\n        </ul>\n        <div\n          className=\"main-nav__menu-icon\"\n          id=\"menu-icon\"\n          onClick={toggleMenu}\n        />\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport \"./assets/App.scss\";\nimport Home from \"./components/Home/home\";\nimport Header from \"./components/Header/Header\";\n// import {Projects} from './json.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projects: []\n    };\n  }\n   componentDidMount() {\n    fetch(\"https://api.jsonbin.io/b/5bb7cc37a97c597b3c6069fd/7\")\n      .then(response => response.json()).then(res => { \n        this.setState({\n       projects: res\n      })\n    })\n\n  }\n\n  render() {\n    \n    console.log(this.state.data)\n    return (\n      <div className=\"App\">\n        <Header />\n        <Home projects={this.state.projects} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}